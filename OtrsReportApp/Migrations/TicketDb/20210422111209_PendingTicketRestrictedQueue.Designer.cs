// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OtrsReportApp.Data;

namespace OtrsReportApp.Migrations.TicketDb
{
    [DbContext(typeof(TicketDbContext))]
    [Migration("20210422111209_PendingTicketRestrictedQueue")]
    partial class PendingTicketRestrictedQueue
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("OtrsReportApp.Models.OtrsTicket.AcknowledgedTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NatInt")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("acknowledged_ticket");
                });

            modelBuilder.Entity("OtrsReportApp.Models.OtrsTicket.PendedTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CommentId")
                        .HasColumnType("int");

                    b.Property<int>("Overdue")
                        .HasColumnType("int");

                    b.HasKey("Id", "TicketId");

                    b.HasIndex("CommentId");

                    b.HasIndex("TicketId")
                        .IsUnique();

                    b.ToTable("pended_ticket");
                });

            modelBuilder.Entity("OtrsReportApp.Models.OtrsTicket.PendingTicketRestrictedQueue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("QueueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QueueId")
                        .IsUnique();

                    b.ToTable("pending_ticket_restricted_queue");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "test_But",
                            QueueId = 32
                        },
                        new
                        {
                            Id = 2,
                            Name = "testing_vas",
                            QueueId = 38
                        },
                        new
                        {
                            Id = 3,
                            Name = "Testing_operators",
                            QueueId = 39
                        },
                        new
                        {
                            Id = 4,
                            Name = "TestSurvey",
                            QueueId = 42
                        },
                        new
                        {
                            Id = 5,
                            Name = "daily testing",
                            QueueId = 52
                        });
                });

            modelBuilder.Entity("OtrsReportApp.Models.OtrsTicket.TicketComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4");

                    b.Property<string>("CommentedBy")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ticket_comment");
                });

            modelBuilder.Entity("OtrsReportApp.Models.OtrsTicket.PendedTicket", b =>
                {
                    b.HasOne("OtrsReportApp.Models.OtrsTicket.TicketComment", "TicketComment")
                        .WithMany()
                        .HasForeignKey("CommentId");

                    b.Navigation("TicketComment");
                });
#pragma warning restore 612, 618
        }
    }
}
